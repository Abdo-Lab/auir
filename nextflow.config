manifest {
    /* Homepage of project */
    homePage = 'https://github.com/cdeanj/auir'

    /* Description of project */
    description = 'Auir: An influenza analysis pipeline.'

    /* Main pipeline script */
    mainScript = 'auir.nf'

    /* Default repository branch */
    defaultBranch = 'master'
}

env {
    /* Location of trimmomatic jar file */
    TRIMMOMATIC = '/opt/trimmomatic/Trimmomatic-0.36'

    /* Location of picard jar file */
    PICARD = '/opt/picard/build/libs'
}

docker {
    /* Enables Docker execution */
    enabled = true

    /* Fixes ownership of outputs created inside of a Docker container */
    fixOwnership = true
}

params {
    /* Location of forward and reverse read pairs */
    reads = "data/raw/*_R{1,2}_001.fastq"

    /* Location of reference genome index files */
    index = ""

    /* Location of reference genome */
    host = "data/host/gallus.fa"

    /* Location of adapter sequences */
    adapters = "data/adapters/nextera.fa"

    /* Location of tab delimited adapter sequences */
    fqc_adapters = "data/adapters/nextera.tab"

    /* Output directory */
    output = "./test"

    /* Number of threads */
    threads = 16

    /* Trimmomatic trimming parameters */
    leading = 3
    trailing = 3
    slidingwindow = "4:15"
    minlen = 36

    /* Min contig length */
    min_contig = 600

    /* Display help message */
    help = false
}

process {
    $AlignReadsToContigs {
        container = "cdeanj/auir:bwa"
        maxForks = 4
    }
    $AlignReadsToHost {
        container = "cdeanj/auir:bwa"
        maxForks = 4
    }
    $RunBlast {
        container = "cdeanj/auir:makeblastdb"
        maxForks = 4
    }
    $AggregateCoverageCounts {
        container = "cdeanj/auir:bedtools2"
        maxForks = 4
    }
    $RunSPAdes {
        container = "cdeanj/auir:spades"
        maxForks = 4
    }
    $BAMToFASTQ {
        container = "cdeanj/auir:bedtools2"
        maxForks = 4
    }
    $CalculateCoverage {
        container = "cdeanj/auir:bedtools2"
        maxForks = 4
    }
    $BuildHostIndex {
        container = "cdeanj/auir:bwa"
        maxForks = 1
    }
    $RunMultiQC {
        container = "cdeanj/auir:multiqc"
        maxForks = 4
    }
    $RunQuast {
        container = "cdeanj/auir:quast"
        maxForks = 4
    }
    $RemoveHostDNA {
        container = "cdeanj/auir:samtools"
        maxForks = 4
    }
    $RunFastQC {
        container = "cdeanj/auir:fastqc"
        maxForks = 4
    }
    $RunQC {
        container = "cdeanj/auir:trimmomatic"
        maxForks = 4
    }
    $SAMToBAM {
        container = "cdeanj/auir:samtools"
        maxForks = 4
    }
    $RemovePCRDuplicates {
        container = "cdeanj/auir:samtools"
        maxForks = 4
    }
    $RunFreebayes {
        container = "cdeanj/auir:freebayes"
        maxForks = 4
    }
    $SplitSegments {
        container = "cdeanj/auir:python"
        maxForks = 4
    }
}
